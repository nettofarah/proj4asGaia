<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="this.init()" xmlns:view="br.ufla.lemaf.coordinates.view.*"
		 >
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import br.ufla.lemaf.coordinates.model.DMSCoordinate;
			import br.ufla.lemaf.coordinates.model.Point;
			import br.ufla.lemaf.coordinates.model.ReferenceSystem;
			import br.ufla.lemaf.coordinates.model.transformer.DegreeMinutesSecondsProjectionTransformer;
			import br.ufla.lemaf.coordinates.model.transformer.Proj4ProjectionTransformer;
			import br.ufla.lemaf.coordinates.pm.CoordinatesPM;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var model:CoordinatesPM;
			
			[Bindable]
			private var isDegree:Boolean = false;
			
			[Bindable]
			public var referenceSystems:ArrayCollection;
			
			public function init():void{
				
				this.model = new CoordinatesPM(this.referenceSystems,
					new Proj4ProjectionTransformer()
				);
				this.combo.selectedIndex = 0;

				this.pointView.xText.text = "";
				this.pointView.yText.text = "";
			}
			
			public function changeReferenceSystem(e:IndexChangeEvent):void{
				var from:ReferenceSystem = this.model.availableSystems.getItemAt(e.oldIndex) as ReferenceSystem;
				var to:ReferenceSystem = this.model.availableSystems.getItemAt(e.newIndex) as ReferenceSystem;
				
				var x:Number = new Number(this.pointView.xText.text);
				var y:Number = new Number(this.pointView.yText.text);
				this.model.point = br.ufla.lemaf.coordinates.model.Point.fromAxis(x,y);
				
				if(to.src == "DMS"){
					this.isDegree = true;
				}else{
					this.isDegree = false;
					
					if(from.src == "DMS"){
						var xDMS:DMSCoordinate = this.degreeView.xDMS;
						var yDMS:DMSCoordinate = this.degreeView.yDMS;
						this.model.point = br.ufla.lemaf.coordinates.model.Point.fromDMS(xDMS, yDMS);
					}
					
				}
				
				this.model.transformer = new Proj4ProjectionTransformer();
				this.model.changeReference(from,to);
			}
			
			public function setPoint(point:br.ufla.lemaf.coordinates.model.Point,to:ReferenceSystem=null):void{
				this.model.point = point;
				if(to != null){
					var from:ReferenceSystem = this.model.availableSystems.getItemAt(this.combo.selectedIndex) as ReferenceSystem;
					this.model.changeReference(from,to);
					this.setComboTo(to);
				}
			}
			
			private function setComboTo(to:ReferenceSystem):void{
				var i:uint = 0;
				for each (var ref:ReferenceSystem in this.referenceSystems){
					if (ref.src == to.src){
						break;
					}
					i++;
				}
				this.combo.selectedIndex = i;
			}
			
			public function getPoint(to:ReferenceSystem=null):br.ufla.lemaf.coordinates.model.Point{
				var from:ReferenceSystem = this.model.availableSystems.getItemAt(this.combo.selectedIndex) as ReferenceSystem;
				if(to != null){
					var tempPoint:br.ufla.lemaf.coordinates.model.Point = br.ufla.lemaf.coordinates.model.Point.fromAxis(this.model.point.x,this.model.point.y);
					return new Proj4ProjectionTransformer().transform(from,to,tempPoint);
				}
				return this.model.point;
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
		
		<s:Label text="Sistema de Referencia de Coordenadas" />
		<s:ComboBox width="100%" id="combo" dataProvider="{this.model.availableSystems}" change="this.changeReferenceSystem(event);" />
		
		<mx:Spacer height="10" />
		
		<view:DefaultPointView width="100%" visible="{!isDegree}" includeInLayout="{!isDegree}" id="pointView" point="{this.model.point}" />
		
		<view:DegreeMinuteSecondPointView width="100%" visible="{isDegree}" includeInLayout="{isDegree}" id="degreeView" point="{this.model.point}" />
		
	</s:VGroup>
	
</s:Group>
